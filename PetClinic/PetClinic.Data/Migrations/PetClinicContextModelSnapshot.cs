// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetClinic.Data.Models;

namespace PetClinic.Data.Migrations
{
    [DbContext(typeof(PetClinicContext))]
    partial class PetClinicContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetClinic.Core.Models.Diagnosis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Notes")
                        .IsRequired();

                    b.Property<Guid>("PatientId");

                    b.Property<Guid>("VeterinarianId");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Diagnosis");
                });

            modelBuilder.Entity("PetClinic.Core.Models.Field", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Field");
                });

            modelBuilder.Entity("PetClinic.Core.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateAdded");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Patient");
                });

            modelBuilder.Entity("PetClinic.Core.Models.Specialization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("FieldId");

                    b.Property<Guid?>("VeterinarianId");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("VeterinarianId");

                    b.ToTable("Specialization");
                });

            modelBuilder.Entity("PetClinic.Core.Models.Veterinarian", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Veterinarian");
                });

            modelBuilder.Entity("PetClinic.Core.Models.Diagnosis", b =>
                {
                    b.HasOne("PetClinic.Core.Models.Patient", "Patient")
                        .WithMany("Diagnoses")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetClinic.Core.Models.Veterinarian", "Veterinarian")
                        .WithMany("Diagnoses")
                        .HasForeignKey("VeterinarianId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetClinic.Core.Models.Specialization", b =>
                {
                    b.HasOne("PetClinic.Core.Models.Field", "Field")
                        .WithMany("Specializations")
                        .HasForeignKey("FieldId");

                    b.HasOne("PetClinic.Core.Models.Veterinarian", "Veterinarian")
                        .WithMany("Specializations")
                        .HasForeignKey("VeterinarianId");
                });
#pragma warning restore 612, 618
        }
    }
}
